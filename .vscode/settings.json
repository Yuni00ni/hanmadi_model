{
    // 멀티 플랫폼 GPU 우선순위 설정
    // 1순위: Windows NVIDIA GPU (CUDA)
    // 2순위: Mac Apple Silicon GPU (MPS) 
    // 3순위: CPU
    // Python 인터프리터 설정
    "python.defaultInterpreterPath": "python",
    "python.terminal.activateEnvironment": true,
    "python.analysis.autoImportCompletions": true,
    "python.analysis.typeCheckingMode": "basic",
    // Jupyter 노트북 설정
    "jupyter.alwaysTrustNotebooks": true,
    "jupyter.askForKernelRestart": false,
    "jupyter.interactiveWindow.creationMode": "perFile",
    "jupyter.runStartupCommands": [
        "# GPU 우선순위 자동 설정",
        "import os",
        "import platform",
        "import torch",
        "import warnings",
        "warnings.filterwarnings('ignore')",
        "",
        "# 플랫폼별 GPU 우선순위 설정",
        "system = platform.system()",
        "device = None",
        "",
        "# 1순위: CUDA (Windows/Linux)",
        "if torch.cuda.is_available():",
        "    os.environ['CUDA_VISIBLE_DEVICES'] = '0'",
        "    os.environ['CUDA_LAUNCH_BLOCKING'] = '1'",
        "    device = torch.device('cuda:0')",
        "    print(f'🚀 CUDA GPU 활성화: {torch.cuda.get_device_name(0)}')",
        "",
        "# 2순위: MPS (Mac)",
        "elif hasattr(torch.backends, 'mps') and torch.backends.mps.is_available():",
        "    device = torch.device('mps')",
        "    print('🚀 Apple Silicon GPU (MPS) 활성화')",
        "",
        "# 3순위: CPU",
        "else:",
        "    device = torch.device('cpu')",
        "    os.environ['OMP_NUM_THREADS'] = '4'",
        "    print('🖥️ CPU 사용 (GPU 없음)')",
        "",
        "# 전역 디바이스 설정",
        "globals()['DEVICE'] = device",
        "print(f'설정된 디바이스: {device}')"
    ],
    // 플랫폼별 환경 변수 설정
    "terminal.integrated.env.windows": {
        "CUDA_VISIBLE_DEVICES": "0",
        "CUDA_LAUNCH_BLOCKING": "1",
        "OMP_NUM_THREADS": "8",
        "PYTORCH_CUDA_ALLOC_CONF": "max_split_size_mb:512"
    },
    "terminal.integrated.env.osx": {
        "PYTORCH_ENABLE_MPS_FALLBACK": "1",
        "OMP_NUM_THREADS": "8",
        "PYTORCH_MPS_HIGH_WATERMARK_RATIO": "0.0"
    },
    "terminal.integrated.env.linux": {
        "CUDA_VISIBLE_DEVICES": "0",
        "CUDA_LAUNCH_BLOCKING": "1",
        "OMP_NUM_THREADS": "8",
        "PYTORCH_CUDA_ALLOC_CONF": "max_split_size_mb:512"
    },
    // 노트북 실행 최적화
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },
    "notebook.output.textLineLimit": 50,
    "notebook.formatOnSave.enabled": true,
    // 코드 실행 설정
    "python.terminal.executeInFileDir": true,
    "python.terminal.launchArgs": [
        "-X",
        "dev"
    ],
    // GPU 관련 확장 설정
    "python.experiments.optInto": [
        "pythonTerminalEnvVarActivation"
    ],
    // 자동 저장 및 포맷팅
    "files.autoSave": "afterDelay",
    "files.autoSaveDelay": 1000,
    "editor.formatOnSave": true,
    // Git 설정
    "git.autofetch": true,
    "git.confirmSync": false,
    "notebook.output.scrolling": true
}